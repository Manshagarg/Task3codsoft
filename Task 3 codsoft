#include <iostream>
#include <vector>
using namespace std;

struct Task {
    string description;
    bool completed;
};

vector<Task> taskList;

void displayMenu() {
    cout << "To-Do List Manager" << endl;
    cout << "1. Add Task" << endl;
    cout << "2. View Tasks" << endl;
    cout << "3. Mark Task as Completed" << endl;
    cout << "4. Remove Task" << endl;
    cout << "5. Quit" << endl;
}

void addTask() {
    string description;
    cout << "Enter task description: ";
    cin.ignore();
    getline(cin, description);

    Task newTask;
    newTask.description = description;
    newTask.completed = false;

    taskList.push_back(newTask);

    cout << "Task added successfully!" << endl;
}

void viewTasks() {
    if (taskList.empty()) {
        cout << "No tasks to display." << endl;
        return;
    }

    cout << "Tasks:" << endl;
    for (size_t i = 0; i < taskList.size(); i++) {
        cout << "[" << i + 1 << "] ";
        if (taskList[i].completed) {
            cout << "[X] ";
        } else {
            cout << "[ ] ";
        }
        cout << taskList[i].description << endl;
    }
}

void markTaskCompleted() {
    viewTasks();
    int taskNumber;
    cout << "Enter the task number to mark as completed: ";
    cin >> taskNumber;

    if (taskNumber >= 1 && taskNumber <= static_cast<int>(taskList.size())) {
        taskList[taskNumber - 1].completed = true;
        cout << "Task marked as completed!" << endl;
    } else {
        cout << "Invalid task number. Please try again." << endl;
    }
}

void removeTask() {
    viewTasks();
    int taskNumber;
    cout << "Enter the task number to remove: ";
    cin >> taskNumber;

    if (taskNumber >= 1 && taskNumber <= static_cast<int>(taskList.size())) {
        taskList.erase(taskList.begin() + taskNumber - 1);
        cout << "Task removed successfully!" << endl;
    } else {
        cout << "Invalid task number. Please try again." << endl;
    }
}

int main() {
    int choice;

    do {
        displayMenu();
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                addTask();
                break;
            case 2:
                viewTasks();
                break;
            case 3:
                markTaskCompleted();
                break;
            case 4:
                removeTask();
                break;
            case 5:
                cout << "Goodbye!" << endl;
                break;
            default:
                cout << "Invalid choice. Please try again." << endl;
                break;
        }
    } while (choice != 5);

    return 0;
}

